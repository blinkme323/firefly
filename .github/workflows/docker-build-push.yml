name: Build, Security Checks, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-welcome:latest .

      - name: Save Docker image as tarball
        run: |
          docker save ${{ secrets.DOCKER_USERNAME }}/nginx-welcome:latest -o nginx-welcome.tar

      - name: Upload Docker image tarball
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: nginx-welcome.tar

  vulnerabilities-scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY environment variable
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan Docker image for Vulnerabilities + SBOM
        run: tmas scan docker-archive:nginx-welcome.tar -V --saveSBOM > vulnerability-scan-results.txt

      # FAIL if critical vulnerabilities are found
      - name: Fail if critical vulnerabilities found
        run: |
          sudo apt-get update -y && sudo apt-get install jq -y
          CRITICAL_COUNT=$(jq '.vulnerabilities.criticalCount' vulnerability-scan-results.txt)
          echo "Found $CRITICAL_COUNT critical vulnerabilities"
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "Critical vulnerabilities found. Failing pipeline..."
            exit 1
          fi

      - name: Upload vulnerability scan results
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-scan-results
          path: vulnerability-scan-results.txt

      - name: Upload SBOM file
        uses: actions/upload-artifact@v3
        with:
          name: sbom-report
          path: SBOM_*.json

  malware-scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY environment variable
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan Docker image for Malware
        run: tmas scan docker-archive:nginx-welcome.tar -M > malware-scan-results.txt

      - name: Upload malware scan results
        uses: actions/upload-artifact@v3
        with:
          name: malware-scan-results
          path: malware-scan-results.txt

  secrets-scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY environment variable
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan Docker image for Secrets
        run: tmas scan docker-archive:nginx-welcome.tar -S > secrets-scan-results.txt

      - name: Upload secrets scan results
        uses: actions/upload-artifact@v3
        with:
          name: secrets-scan-results
          path: secrets-scan-results.txt

  push-image:
    needs:
      - vulnerabilities-scan
      - malware-scan
      - secrets-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load --input nginx-welcome.tar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nginx-welcome:latest
