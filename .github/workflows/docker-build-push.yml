name: Build with Conditional Security Scans

on:
  push:
    branches:
      - main

jobs:
  ###################################################################
  # 1) BUILD JOB
  ###################################################################
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t fafiorim/firefly:latest .

      - name: Save Docker image
        run: docker save fafiorim/firefly:latest -o firefly.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: firefly.tar

  ###################################################################
  # 2) VULNERABILITY SCAN
  ###################################################################
  vulnerabilities-scan:
    if: ${{ secrets.SECURITY_ENABLED != 'false' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan for Vulnerabilities
        run: tmas scan docker-archive:firefly.tar -V > vulnerability-scan-results.json

      - name: Fail if critical vulnerabilities
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          CRITICAL=$(jq '.vulnerabilities.criticalCount' vulnerability-scan-results.json)
          echo "Critical vulnerabilities: $CRITICAL"
          if [ "$CRITICAL" -gt 0 ]; then
            echo "Critical vulnerabilities found! Failing pipeline..."
            exit 1
          fi

      - name: Upload vulnerability logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-scan-results
          path: vulnerability-scan-results.json

  ###################################################################
  # 3) MALWARE SCAN
  ###################################################################
  malware-scan:
    if: ${{ secrets.SECURITY_ENABLED != 'false' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan for Malware
        run: tmas scan docker-archive:firefly.tar -M > malware-scan-results.json

      - name: Fail if malware is found
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          CODE=$(jq '.malware.scanResult' malware-scan-results.json)
          echo "Malware scan result code: $CODE"
          if [ "$CODE" -gt 0 ]; then
            echo "Malware detected! Failing..."
            exit 1
          fi

      - name: Upload malware logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: malware-scan-results
          path: malware-scan-results.json

  ###################################################################
  # 4) SECRETS SCAN
  ###################################################################
  secrets-scan:
    if: ${{ secrets.SECURITY_ENABLED != 'false' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Scan for Secrets
        run: tmas scan docker-archive:firefly.tar -S > secrets-scan-results.json

      - name: Fail if secrets found
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          COUNT=$(jq '.secrets.unmitigatedFindingsCount' secrets-scan-results.json)
          if [ "$COUNT" -gt 0 ]; then
            echo "Secrets detected! Failing pipeline..."
            exit 1
          fi

      - name: Upload secrets logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: secrets-scan-results
          path: secrets-scan-results.json

  ###################################################################
  # 5) SBOM SCAN (optional)
  ###################################################################
  sbom-scan:
    if: ${{ secrets.SECURITY_ENABLED != 'false' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Install Artifact Scan CLI
        run: ./tmas_install.sh

      - name: Set TMAS_API_KEY
        run: echo "TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}" >> $GITHUB_ENV

      - name: Generate SBOM
        run: tmas scan docker-archive:firefly.tar -V --saveSBOM > sbom-scan-results.json

      - name: Upload SBOM logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sbom-scan-results
          path: sbom-scan-results.json

      - name: Upload SBOM file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sbom-report
          path: SBOM_*.json

  ###################################################################
  # 6) PUSH JOB
  ###################################################################
  push-image:
    needs:
      - build
      # If you want to require scanning to pass if it's enabled, add them here:
      - malware-scan
      - secrets-scan
      # - vulnerabilities-scan
      # - sbom-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load --input firefly.tar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push fafiorim/firefly:latest
